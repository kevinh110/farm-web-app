{"version":3,"sources":["components/line-chart.component.jsx","components/line-chart-list.component.jsx","components/subtable.component.jsx","components/subtable-list.component.jsx","pages/mainpage/mainpage.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["LineChart","props","series","Array","isArray","ydata","name","data","title","state","options","chart","id","width","xaxis","categories","xdata","text","align","margin","offsetX","offsetY","floating","style","fontSize","fontWeight","fontFamily","undefined","color","this","type","React","Component","LineChartList","a","data_container","query","items","fetchAll","cow_arr","resources","conductivity","production","activity","dates","protein","fat","item","push","parseFloat","Conductivity","datesql","split","setState","console","error","length","log","className","SubTable","columns","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","map","column","TableCell","TableBody","SubTableList","preds_container","latest","status_arr","AnimalStatus","Gynecology_Status","data_arr","DIM","Lactation_Num","preds_arr","preds","predictions_arr","prediction","preds_data","status_data","data_data","MainPage","require","CosmosClient","client","endpoint","key","connectionPolicy","enableEndpointDiscovery","database","read","container","cows","res","cow","Animal_ID","pred_arr","pred","arr","farm_data","search","download","print","viewColumns","filterType","filter","responsive","selectableRows","expandableRows","expandableRowsHeader","expandableRowsOnClick","renderExpandableRow","rowData","rowMeta","colSpan","theme","createMuiTheme","palette","typography","useNextVariants","components","ExpandButton","searchable","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9a0842e.chunk.js","sourcesContent":["import Chart from 'react-apexcharts'\r\nimport React from \"react\";\r\n\r\nclass LineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    let series = []\r\n    if (Array.isArray(this.props.ydata[0])){\r\n      series = [\r\n        {\r\n        name: 'Protein', // Bad code :(\r\n        data: this.props.ydata[0]\r\n        },\r\n        {\r\n        name: 'Fat',\r\n        data: this.props.ydata[1]\r\n        }\r\n      ]\r\n    }\r\n    else {\r\n      series = [\r\n        {\r\n          name: this.props.title,\r\n          data: this.props.ydata\r\n        }\r\n      ]\r\n    }\r\n\r\n    this.state =  {\r\n      options: {\r\n        chart: {\r\n          id: this.props.title,\r\n          width: '10%'\r\n        },\r\n        xaxis: {\r\n          categories: this.props.xdata\r\n        },\r\n        title: {\r\n          text: this.props.title,\r\n          align: 'left',\r\n          margin: 10,\r\n          offsetX: 0,\r\n          offsetY: 0,\r\n          floating: false,\r\n          style: {\r\n            fontSize:  '14px',\r\n            fontWeight:  'bold',\r\n            fontFamily:  undefined,\r\n            color:  '#263238'\r\n          },\r\n      }\r\n      },\r\n      series: series\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <Chart\r\n      options={this.state.options}\r\n      series={this.state.series}\r\n      type=\"line\"\r\n      width=\"400\"\r\n    />    )\r\n  }\r\n}\r\n\r\nexport default LineChart;\r\n","import React from 'react'\r\nimport LineChart from './line-chart.component'\r\n\r\nclass LineChartList extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      \"Conductivity\": [],\r\n      \"Production\": [],\r\n      \"Activity\": [],\r\n      \"Protein\": [],\r\n      \"Fat\": [],\r\n      \"dates\": []\r\n    };\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try {\r\n      const {data_container, id} = this.props;\r\n\r\n      const query = `SELECT * FROM c WHERE c.Animal_ID = \"${id}\" ORDER BY c.datesql`\r\n\r\n       const { resources : cow_arr } = await data_container.items\r\n       .query(query)\r\n       .fetchAll();\r\n\r\n       const conductivity = []\r\n       const production = []\r\n       const activity = []\r\n       const dates = []\r\n       const protein = []\r\n       const fat = []\r\n       \r\n\r\n       for (const item of cow_arr) {\r\n         conductivity.push(parseFloat(item.Conductivity));\r\n         production.push(parseFloat(item[\"ProdRate(gr/hr)\"]));\r\n         activity.push(parseFloat(item[\"Activity(steps/hr)\"]));\r\n         protein.push(parseFloat(item[\"Protein(%)\"]));\r\n         fat.push(parseFloat(item[\"Fat(%)\"]));\r\n         dates.push(item.datesql.split(\"T\")[0]);\r\n       }\r\n       \r\n\r\n       this.setState(\r\n        { \r\n          \"Conductivity\": conductivity,\r\n          \"Production\": production,\r\n          \"Activity\": activity,\r\n          \"Protein\": protein,\r\n          \"Fat\": fat,\r\n          \"dates\": dates\r\n        }\r\n        );\r\n       \r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n }\r\n render(){\r\n   const {dates} = this.state;\r\n   if (dates.length === 0){\r\n     return (\r\n       <div></div>\r\n     )\r\n   }\r\n   else {\r\n     console.log(\"protein\")\r\n    return (\r\n      <div className = 'grid-container'>\r\n       <LineChart title = \"Milk Production (gr/hr)\" ydata = {this.state[\"Production\"]} xdata = {dates}></LineChart>\r\n       <LineChart title = \"Conductivity\" ydata = {this.state[\"Conductivity\"]} xdata = {dates}></LineChart>\r\n       <LineChart title = \"Activity (steps/hr)\" ydata = {this.state[\"Activity\"]} xdata = {dates}></LineChart>\r\n       <LineChart title = \"Protein vs. Fat (%)\" ydata = {[this.state[\"Protein\"], this.state[\"Fat\"]]} xdata = {dates}></LineChart>\r\n      </div>\r\n    )\r\n   }\r\n   \r\n }\r\n\r\n\r\n\r\n}\r\nexport default LineChartList","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass SubTable extends React.Component {\r\n\r\n  render() {\r\n    const {title, data, columns} = this.props;\r\n\r\n    return (\r\n    <div className = \"subtable\">\r\n    <h2>{title}</h2>\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {\r\n              columns.map((column) => \r\n              <TableCell style={{\"font-weight\": 'bold'}}>{column}</TableCell>\r\n              )\r\n            }\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow key = {title}>\r\n            {\r\n              data.map((item) => \r\n              <TableCell>{item}</TableCell>\r\n              )\r\n            }\r\n            </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default SubTable;\r\n\r\n\r\n","import React from 'react';\r\nimport SubTable from './subtable.component';\r\n\r\n\r\nclass SubTableList extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n        'status_data': [],\r\n        'preds_data': [],\r\n        'data_data': [], // LOL Name...\r\n      };\r\n    }\r\n\r\n    async componentDidMount(){\r\n      try {\r\n \r\n \r\n        const {data_container, preds_container, id} = this.props\r\n        const query = `SELECT * FROM c WHERE c.Animal_ID = \"${id}\" ORDER BY c.datesql DESC OFFSET 0 LIMIT 1`\r\n\r\n         const { resources : cow_arr } = await data_container.items\r\n         .query(query)\r\n         .fetchAll();\r\n         console.log(\"SubtableList\");\r\n         console.log(cow_arr);\r\n         const [latest] = cow_arr;\r\n         const status_arr = [latest.AnimalStatus, latest.Gynecology_Status];\r\n         const data_arr = [latest[\"Yield(gr)\"], latest.DIM, latest.Lactation_Num]\r\n         \r\n         const { resources : preds_arr } = await preds_container.items\r\n         .query(query)\r\n         .fetchAll();\r\n         const [preds] = preds_arr;\r\n         const predictions_arr = [preds.prediction, \"D\"];\r\n\r\n         this.setState({ \r\n          'status_data': status_arr,\r\n          'preds_data': predictions_arr,\r\n          'data_data': data_arr, // LOL Name...\r\n        });\r\n\r\n         \r\n      }\r\n      catch (error) {\r\n        console.error(error);\r\n      }\r\n   }\r\n   render (){\r\n     return (\r\n       <div>\r\n       <SubTable title = \"Prediction\" data = {this.state.preds_data} columns = {[\"Mastitis\", \"Pathogen\"]}></SubTable>\r\n       <SubTable title = \"Status\" data = {this.state.status_data} columns = {[\"Animal\", \"Gynecology\"]}></SubTable>\r\n       <SubTable title = \"Data\" data = {this.state.data_data} columns = {[\"Yield(gr)\", \"DIM\", \"Lactation\"]}></SubTable>\r\n\r\n       </div>\r\n       )\r\n   }\r\n   \r\n}\r\n\r\nexport default SubTableList","import React from \"react\";\r\nimport MUIDataTable, { ExpandButton } from \"mui-datatables\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nimport LineChartList from \"../../components/line-chart-list.component\"\r\nimport SubTableList from '../../components/subtable-list.component'\r\n\r\nimport './mainpage.styles.css'\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      'farm_data': [],\r\n      'data_container': null,\r\n      'preds_container': null\r\n     };\r\n  }\r\n\r\n  async  componentDidMount(){\r\n     try {\r\n\r\n      const { CosmosClient } = require(\"@azure/cosmos\");\r\n      const endpoint = \"https://dairy-project-cosmos.documents.azure.com:443\";\r\n      const key = \"WNLJbEHT9NTWL9wGygnQMvzX2JUJo5Iv72OPoba9dTyKfbVrf1FjK6vY3XXaN8BPsQ5iC5UTkOQLVJ8UIBEk4A==\";\r\n      const client = new CosmosClient({endpoint, key, \r\n        connectionPolicy: {\r\n          enableEndpointDiscovery: false\r\n        }});\r\n\r\n\r\n        const { database } = await client.database(\"dairy-project-database\").read();\r\n        const { container : data_container } = await database.container(\"milk-daily-data\").read();\r\n        const { container : preds_container } = await database.container(\"mastitis-predictions\").read();\r\n\r\n        const query = \"SELECT DISTINCT c.Animal_ID from c\";\r\n\r\n        const { resources : cows } = await data_container.items\r\n        .query(query)\r\n        .fetchAll();\r\n\r\n        // Get date and last updated\r\n        const res = []\r\n        \r\n        for (const cow of cows){\r\n          const {Animal_ID} = cow ;\r\n          const query = `SELECT * FROM c WHERE c.Animal_ID = \"${Animal_ID}\" ORDER BY c.datesql DESC OFFSET 0 LIMIT 1`\r\n          const { resources : pred_arr } = await preds_container.items\r\n          .query(query)\r\n          .fetchAll();\r\n          if (pred_arr.length !== 0){\r\n            const [pred] = pred_arr;\r\n            const arr = [Animal_ID, pred.datesql, pred.prediction]\r\n            res.push(arr);\r\n          }\r\n          else {\r\n            const arr = [Animal_ID];\r\n            res.push(arr);\r\n          }\r\n        }\r\n        this.setState({\r\n          \"farm_data\": res,\r\n          \"data_container\": data_container,\r\n          \"preds_container\": preds_container\r\n        });\r\n\r\n     }\r\n     catch (error) {\r\n      console.error(error);\r\n     }\r\n  }\r\n\r\n  render() {\r\n\r\n    const columns = [\r\n      {\r\n        name: \"ID Number\",\r\n        options: {\r\n          filter: false,\r\n          searchable: true\r\n        }\r\n      },\r\n      {\r\n        name: \"Last Updated\",\r\n        options: {\r\n          filter: false,\r\n          searchable: false\r\n        }\r\n      },\r\n      {\r\n        name: \"Alert\",\r\n        options: {\r\n          filter: true,\r\n          searchable: false\r\n        }\r\n      }\r\n    ];\r\n\r\n    const data = this.state.farm_data;\r\n    const {data_container, preds_container} = this.state\r\n\r\n    const options = {\r\n      search: true,\r\n      download: false,\r\n      print: false,\r\n      viewColumns: false,\r\n      filterType: 'dropdown',\r\n      filter: true,\r\n      responsive: 'standard',\r\n      selectableRows: false,\r\n      expandableRows: true,\r\n      expandableRowsHeader: false,\r\n      expandableRowsOnClick: true,\r\n      renderExpandableRow: (rowData, rowMeta) => {\r\n        const colSpan = rowData.length + 1;\r\n        console.log(\"rowData: \", rowData);\r\n        const id = rowData[0];\r\n        return (\r\n          <TableCell colSpan={colSpan}>\r\n            <TableCell colSpan={colSpan}>\r\n              <SubTableList id = {id} data_container = {data_container} preds_container = {preds_container} ></SubTableList>\r\n            </TableCell>\r\n            <TableCell colSpan={colSpan}>\r\n              <h2> Trends </h2>\r\n              <LineChartList id = {id} data_container = {data_container} ></LineChartList>\r\n            </TableCell>\r\n          </TableCell>\r\n\r\n        );\r\n\r\n      },\r\n    };\r\n\r\n    const theme = createMuiTheme({\r\n      palette: { type: 'light' },\r\n      typography: { useNextVariants: true },\r\n    });\r\n\r\n    const components = {\r\n      ExpandButton: function (props) {\r\n        return <ExpandButton {...props} />;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <MUIDataTable title={\"Cow Dashboard\"} data={data} columns={columns} options={options} components={components} />\r\n      </MuiThemeProvider>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\n\nimport MainPage from './pages/mainpage/mainpage.component.jsx'\n\nfunction App() {\n  return (\n      <div>\n        <MainPage></MainPage>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}